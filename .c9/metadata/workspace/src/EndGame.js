{"changed":true,"filter":false,"title":"EndGame.js","tooltip":"/src/EndGame.js","value":"'use strict';\nvar Scoreboard = function(game) {\n    var gameover;\n\n    Phaser.Group.call(this, game);\n\tthis.refWidth = 426;\n\tthis.refHeight = 639;\n\tthis.baseX = (this.game.width - this.refWidth) / 2;\n\tthis.paddingCol1 = 20;\n\tthis.paddingCol2 = 110;\n\tthis.col1X = this.baseX + this.paddingCol1;\n\tthis.col2X = this.baseX + this.paddingCol2;\n\n    /*gameover = this.create(this.game.width / 2, 100, 'gameover');\n    gameover.anchor.setTo(0.5, 0.5);*/\n\n    this.scoreboard = this.create(this.game.width / 2, this.refHeight / 2, 'board');\n    this.scoreboard.anchor.setTo(0.5, 0.5);\n\n    this.scoreText = this.game.add.bitmapText(this.scoreboard.width, this.col1X, 'gameFont', '', 18);\n    this.add(this.scoreText);\n\n    this.bestScoreText = this.game.add.bitmapText(this.scoreboard.width, this.col2X, 'gameFont', '', 18);\n    this.add(this.bestScoreText);\n\n    // add our start button with a callback\n\tthis.startButton = this.game.add.button(325, 426 / 2, 'play', this.startClick, this, 2, 1, 0);\n    this.startButton.anchor.setTo(0.5,0.5);\n\n\tthis.add(this.startButton);\n\n\n    // add our start button with a callback\n    this.pauseButton = this.game.add.button(550, 426 / 2 - 50, 'pause', this.pauseClick, this, 2, 1, 0);\n    this.pauseButton.anchor.setTo(0.5,0.5);\n\n    this.add(this.pauseButton);\n\n    // add our start button with a callback\n    this.homeButton = this.game.add.button(550, 426 / 2 + 50, 'home', this.homeClick, this, 2, 1, 0);\n    this.homeButton.anchor.setTo(0.5,0.5);\n\n    this.add(this.homeButton);\n\n\n\t/*this.ga = this.game.add.button(this.game.width/2, 360, 'ga', this.gotoGA, this);\n\tthis.ga.anchor.setTo(0.5, 0);\n\n\tthis.add(this.ga);\n\t */\n    this.y = this.game.height;\n    this.x = 0;\n};\n\nScoreboard.prototype = Object.create(Phaser.Group.prototype);\nScoreboard.prototype.constructor = Scoreboard;\n\nScoreboard.prototype.update = function() {\n  \n  // write your prefab's specific update code here\n  \n};\n\nScoreboard.prototype.show = function(score) {\n    var medal, bestScore;\n\n    // Step 1\n    this.scoreText.setText(score.toString());\n\n    if(!!localStorage) {\n        // Step 2\n        bestScore = localStorage.getItem('bestScore');\n\n        // Step 3\n        if(!bestScore || bestScore < score) {\n            bestScore = score;\n            localStorage.setItem('bestScore', bestScore);\n        }\n    } else {\n        // Fallback. LocalStorage isn't available\n        bestScore = 'N/A';\n    }\n\n    // Step 4\n    this.bestScoreText.setText(bestScore.toString());\n    this.game.add.tween(this).to({y: this.game.height / 2 - 426 / 2 - 64}, 1000, Phaser.Easing.Bounce.Out, true);\n};\n\nScoreboard.prototype.startClick = function() {\n    this.game.state.start('Game');\n};\n","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":91,"column":0},"action":"insert","lines":["'use strict';","var Scoreboard = function(game) {","    var gameover;","","    Phaser.Group.call(this, game);","\tthis.refWidth = 426;","\tthis.refHeight = 639;","\tthis.baseX = (this.game.width - this.refWidth) / 2;","\tthis.paddingCol1 = 20;","\tthis.paddingCol2 = 110;","\tthis.col1X = this.baseX + this.paddingCol1;","\tthis.col2X = this.baseX + this.paddingCol2;","","    /*gameover = this.create(this.game.width / 2, 100, 'gameover');","    gameover.anchor.setTo(0.5, 0.5);*/","","    this.scoreboard = this.create(this.game.width / 2, this.refHeight / 2, 'board');","    this.scoreboard.anchor.setTo(0.5, 0.5);","","    this.scoreText = this.game.add.bitmapText(this.scoreboard.width, this.col1X, 'gameFont', '', 18);","    this.add(this.scoreText);","","    this.bestScoreText = this.game.add.bitmapText(this.scoreboard.width, this.col2X, 'gameFont', '', 18);","    this.add(this.bestScoreText);","","    // add our start button with a callback","\tthis.startButton = this.game.add.button(325, 426 / 2, 'play', this.startClick, this, 2, 1, 0);","    this.startButton.anchor.setTo(0.5,0.5);","","\tthis.add(this.startButton);","","","    // add our start button with a callback","    this.pauseButton = this.game.add.button(550, 426 / 2 - 50, 'pause', this.pauseClick, this, 2, 1, 0);","    this.pauseButton.anchor.setTo(0.5,0.5);","","    this.add(this.pauseButton);","","    // add our start button with a callback","    this.homeButton = this.game.add.button(550, 426 / 2 + 50, 'home', this.homeClick, this, 2, 1, 0);","    this.homeButton.anchor.setTo(0.5,0.5);","","    this.add(this.homeButton);","","","\t/*this.ga = this.game.add.button(this.game.width/2, 360, 'ga', this.gotoGA, this);","\tthis.ga.anchor.setTo(0.5, 0);","","\tthis.add(this.ga);","\t */","    this.y = this.game.height;","    this.x = 0;","};","","Scoreboard.prototype = Object.create(Phaser.Group.prototype);","Scoreboard.prototype.constructor = Scoreboard;","","Scoreboard.prototype.update = function() {","  ","  // write your prefab's specific update code here","  ","};","","Scoreboard.prototype.show = function(score) {","    var medal, bestScore;","","    // Step 1","    this.scoreText.setText(score.toString());","","    if(!!localStorage) {","        // Step 2","        bestScore = localStorage.getItem('bestScore');","","        // Step 3","        if(!bestScore || bestScore < score) {","            bestScore = score;","            localStorage.setItem('bestScore', bestScore);","        }","    } else {","        // Fallback. LocalStorage isn't available","        bestScore = 'N/A';","    }","","    // Step 4","    this.bestScoreText.setText(bestScore.toString());","    this.game.add.tween(this).to({y: this.game.height / 2 - 426 / 2 - 64}, 1000, Phaser.Easing.Bounce.Out, true);","};","","Scoreboard.prototype.startClick = function() {","    this.game.state.start('Game');","};",""],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":59,"column":47},"end":{"row":59,"column":47},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1432954148149}